apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  annotations:
    helm.sh/created: "1535733993"
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"helm.sh/created":"1535733993"},"labels":{"app":"pgset","chart":"statefulset-1","name":"pgset"},"name":"pgset","namespace":"folio-q2"},"spec":{"replicas":2,"serviceName":"pgset","template":{"metadata":{"labels":{"app":"pgset"}},"spec":{"containers":[{"env":[{"name":"PGHOST","value":"/tmp"},{"name":"PG_PRIMARY_USER","value":"primaryuser"},{"name":"PG_MODE","value":"set"},{"name":"PG_PRIMARY_HOST","value":"pgset-primary"},{"name":"PG_REPLICA_HOST","value":"pgset-replica"},{"name":"PG_PRIMARY_PORT","value":"5432"},{"name":"PG_PRIMARY_PASSWORD","value":"password"},{"name":"PG_USER","value":"testuser"},{"name":"PG_PASSWORD","value":"password"},{"name":"PG_DATABASE","value":"userdb"},{"name":"PG_ROOT_PASSWORD","value":"password"}],"image":"crunchydata/crunchy-postgres:centos7-10.5-2.1.0","name":"pgset","ports":[{"containerPort":5432,"name":"postgres"}],"resources":{"requests":{"cpu":"200m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/pgdata","name":"pgdata"},{"mountPath":"/backup","name":"backup","readOnly":true}]}],"serviceAccount":"pgset-sa","volumes":[{"emptyDir":{},"name":"pgdata"},{"emptyDir":{},"name":"backup"}]}}}}'
  creationTimestamp: null
  generation: 1
  labels:
    app: pgset
    chart: statefulset-1
    io.cattle.field/appId: statefulset
    name: pgset
  name: pgset
  selfLink: /apis/apps/v1beta2/namespaces/folio-q2/statefulsets/pgset
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pgset
  serviceName: pgset
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":5432,"dnsName":"pgset-nodeport","kind":"NodePort","name":"postgres","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        app: pgset
    spec:
      affinity: {}
      containers:
      - env:
        - name: PG_ROOT_PASSWORD
          value: <Postgres root user DB password>
        - name: PG_LOCALE
          value: en_US.UTF-8
        - name: PG_USER
          value: okapi
        - name: PG_REPLICA_HOST
          value: pgset-replica
        - name: MAX_CONNECTIONS
          value: "150"
        - name: PG_PRIMARY_PORT
          value: "5432"
        - name: PG_PRIMARY_USER
          value: primaryuser
        - name: PG_PRIMARY_HOST
          value: pgset-primary
        - name: PGHOST
          value: /tmp
        - name: PG_DATABASE
          value: okapi
        - name: PG_MODE
          value: set
        - name: WORK_MEM
          value: "32"
        - name: ARCHIVE_MODE
          value: "off"
        - name: PGDATA_PATH_OVERRIDE
          value: folio-data
        - name: PG_PASSWORD
          value: okapi25
        - name: PG_PRIMARY_PASSWORD
          value: <Primaryuser of the set DB password>
        image: crunchydata/crunchy-postgres:centos7-10.5-2.1.0
        imagePullPolicy: IfNotPresent
        name: pgset
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP
        resources:
          requests:
            cpu: 200m
            memory: 2Gi
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /pgdata
          name: pgdata
        - mountPath: /pgdata/folio-data
          name: folio-data
          subPath: data-new
        - mountPath: /okapimods
          name: folio-data
          subPath: okapimods
        - mountPath: /backup
          name: folio-data
          subPath: backup
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: pgset-sa
      serviceAccountName: pgset-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: pgdata
      - name: folio-data
        persistentVolumeClaim:
          claimName: folio-data-claim
  updateStrategy:
    type: OnDelete
status:
  replicas: 0
