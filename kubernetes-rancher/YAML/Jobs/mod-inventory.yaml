apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "6"
    field.cattle.io/creatorId: u-d8jfk
    field.cattle.io/publicEndpoints: '[{"addresses":["<xxx.xxx.xxx.xxx>"],"port":31370,"protocol":"TCP","serviceName":"folio-q2:mod-inventory-nodeport","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    workload.user.cattle.io/workloadselector: deployment-folio-q2-mod-inventory
  name: mod-inventory
  selfLink: /apis/apps/v1beta2/namespaces/folio-q2/deployments/mod-inventory
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-folio-q2-mod-inventory
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":9403,"dnsName":"mod-inventory-nodeport","kind":"NodePort","name":"9403tcp1","protocol":"TCP"}]]'
        field.cattle.io/publicEndpoints: '[{"addresses":["<xxx.xxx.xxx.xxx>"],"allNodes":true,"port":31370,"protocol":"TCP","serviceId":"folio-q2:mod-inventory-nodeport"}]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-folio-q2-mod-inventory
    spec:
      affinity: {}
      containers:
      - image: folioci/mod-inventory:9.1.0-SNAPSHOT.88
        imagePullPolicy: Always
        name: mod-inventory
        ports:
        - containerPort: 9403
          name: 9403tcp1
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: dockerhub
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
